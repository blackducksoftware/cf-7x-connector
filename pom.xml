<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.blackducksoftware.tools</groupId>
	<artifactId>cf-7x-connector</artifactId>
	<version>1.4.3</version>

	<name>CommonFramework 7.x Connector</name>
	<url>https://confluence.blackducksoftware.com/display/SE/Connectors</url>


	<description>
		A connector for the 7.X SDK to be used in conjunction with the Common Framework
	</description>

	<organization>
		<name>Black Duck Software</name>
		<url>http://www.blackducksoftware.com/</url>
	</organization>
	<licenses>
		<license>
			<name>GNU General Public License v2.0 only</name>
			<url>http://www.gnu.org/licenses/old-licenses/gpl-2.0-standalone.html</url>
		</license>
	</licenses>
	<properties>
		<maven.compiler.source>1.7</maven.compiler.source>
		<maven.compiler.target>1.7</maven.compiler.target>
		<!-- Build system complaining about UTF 8 -->
		<project.build.sourceEncoding>ISO-8859-1</project.build.sourceEncoding>

		<!-- Protex, Code Center SDK versions -->
		<protex.sdk.version>7.2.0</protex.sdk.version>
		<codecenter.sdk.version>7.1.0</codecenter.sdk.version>
		<!-- Common Framework Version -->
		<common.framework.version>1.6.3</common.framework.version>
	</properties>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.blackducksoftware.protex.sdkclient</groupId>
				<artifactId>protex-sdk-client</artifactId>
				<version>7.2.0</version>
			</dependency>
			<dependency>
				<groupId>com.blackducksoftware.protex.sdkclient</groupId>
				<artifactId>protex-sdk-utilities</artifactId>
				<version>7.2.0</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>1.9.5</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.5</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>1.7.7</version>
			<scope>test</scope>
		</dependency>

		<!-- Protex, from product-protex repo -->
		<dependency>
			<groupId>com.blackducksoftware.protex.sdkclient</groupId>
			<artifactId>protex-sdk-utilities</artifactId>
			<version>${protex.sdk.version}</version>
		</dependency>
		<dependency>
			<groupId>com.blackducksoftware.protex.sdkclient</groupId>
			<artifactId>protex-sdk-client</artifactId>
			<version>${protex.sdk.version}</version>
		</dependency>
		<dependency>
			<groupId>com.blackducksoftware.codecenter.sdkclient</groupId>
			<artifactId>codecenter-sdk-utilities</artifactId>
			<version>${codecenter.sdk.version}</version>
		</dependency>
		<dependency>
			<groupId>com.blackducksoftware.codecenter.sdkclient</groupId>
			<artifactId>codecenter-sdk-client</artifactId>
			<version>${codecenter.sdk.version}</version>
		</dependency>



		<!-- Common Framework, from soleng repo -->
		<dependency>
			<groupId>com.blackducksoftware.tools</groupId>
			<artifactId>common-framework</artifactId>
			<version>${common.framework.version}</version>
		</dependency>

		<dependency>
			<groupId>com.univocity</groupId>
			<artifactId>univocity-parsers</artifactId>
			<version>1.3.2</version>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>18.0</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.1.2</version>
				<executions>
					<execution>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.9.1</version>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
						<!-- assemble development package -->
						<id>dev</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptors>
								<descriptor>src/main/resources/dev_assembly.xml</descriptor>
							</descriptors>
							<descriptorRef>build-zip</descriptorRef>
							<appendAssemblyId>true</appendAssemblyId>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.10</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/scan_target/lib</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.7</version>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.shared</groupId>
						<artifactId>maven-filtering</artifactId>
						<version>1.3</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/scan_target/src</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/java</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>

	</build>

	<repositories>
		<repository>
			<id>soleng</id>
			<name>SolEng Repo</name>
			<url>http://artifactory.blackducksoftware.com/artifactory/soleng</url>
		</repository>
		<repository>
			<id>bintray-bds-tools</id>
			<name>BDS Bintray for Common Framework</name>
			<url>http://dl.bintray.com/bds/tools/</url>
		</repository>
		<repository>
			<id>bintray-bds-sdk</id>
			<name>BDS Bintray for SDK</name>
			<url>http://dl.bintray.com/bds/sdk</url>
		</repository>
	</repositories>

	<!-- Install archives into local Black Duck repo -->

	<distributionManagement>

		<repository>
			<id>artifactory.blackducksoftware.com</id>
			<name>artifactory.blackducksoftware.com-releases</name>
			<url>http://artifactory.blackducksoftware.com:8081/artifactory/soleng</url>
		</repository>
		<snapshotRepository>
			<id>artifactory.blackducksoftware.com</id>
			<name>artifactory.blackducksoftware.com-snapshots</name>
			<url>http://artifactory.blackducksoftware.com:8081/artifactory/soleng</url>
		</snapshotRepository>

	</distributionManagement>
</project>
